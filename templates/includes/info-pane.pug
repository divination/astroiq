dl.results-list(:class="{hidden: !results.valid}")
  dt.datetime Date and time
    dd.datetime(:title="results.datetime") {{results.dateinfo.display}}
  dt.location Location
    dd.location 
      p.coordinates {{results.geo.display_coords}}
      p.address {{results.geo.address}}
  dt.name-gender Name / gender
  dd.name-gender
    span.name {{results.name}}
    span.gender {{results.gender}}
  dt.chart-type Chart type
  dd.chart-type {{results.chartType}}
  dt.astro-data Astrological Data
  dd.astro-data
    ul
      li.ayanamsa 
        span.label Ayanamsa
        strong.value {{results.ayanamsa}}
      li.ascendant
        span.label Ascendant
        strong.value {{results.ascendant}}
      li.et
        span.label ET
        strong.value {{results.et}}
      li.ut
        span.label UT
        span.value {{results.ut}}
        span.value {{results.delta_t}}
  dt.rahu Rahu
  dd.rahu
    p.true-node
      span.lng {{results.true_node.lng}}
      em.label.lng (true node)
    p.mean-node
      span.lng {{results.mean_node.lng}}
      em.label.ng Rahu (mean node)

table.bodies-table
  thead
    tr
      th Planet
      th Longitude
      th Latitude
      th Speed
      th House position
  tbody
    template(v-for="body in results.bodies")
      tr
        th.label {{body.key}}
        td.degrees.lng {{body.lng}}
        td.degrees.lat {{body.lat}}
        td.degrees.ecl {{body.spd}}
        //- td.house-position {{results.bodies.sun.house}}

dl.results-list
  dt.houses Houses
  dd.houses
    ul.bodies-list
      template(v-for="house in results.houseBounds")
        li
          span.label {{house.num}}
          span.coords {{house.lng}} to {{house.end}}